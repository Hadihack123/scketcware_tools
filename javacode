[
  {
    "نام": "View Pager",
    "کد": "final androidx.viewpager.widget.ViewPager viewPager \u003d new androidx.viewpager.widget.ViewPager(this);\nviewPager.setLayoutParams(new ViewGroup.LayoutParams( ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\nviewPager.setBackgroundColor(Color.WHITE);\nMyPagerAdapter adapter \u003d new MyPagerAdapter();\nviewPager.setAdapter(adapter);\nviewPager.setCurrentItem(0);\nlinear1.addView(viewPager);\n\nviewPager.addOnPageChangeListener(new androidx.viewpager.widget.ViewPager.OnPageChangeListener() { public void onPageSelected(int position) { \nif (position \u003d\u003d 0) {\n\n}\nif (position \u003d\u003d 1) {\n\n}\n\nif (position \u003d\u003d 2) {\n\n}\nif (position \u003d\u003d 3) {\n\n}\n }\n\n@Override public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) { }\n@Override public void onPageScrollStateChanged(int state) { }\n\n });\n\n}\n\n\nprivate class MyPagerAdapter extends androidx.viewpager.widget.PagerAdapter {\npublic int getCount() {\nreturn 4;\n}\npublic Object instantiateItem(View collection, int position) {\nLayoutInflater inflater \u003d (LayoutInflater) collection.getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\nint resId \u003d 0;\nswitch (position) {\ncase 0:\nresId \u003d R.layout.left;\nbreak;\ncase 1:\nresId \u003d R.layout.farleft;\nbreak;\ncase 2:\nresId \u003d R.layout.middle;\nbreak;\ncase 3:\nresId \u003d R.layout.right;\nbreak;\n}\nView view \u003d inflater.inflate(resId, null);\n((androidx.viewpager.widget.ViewPager)collection).addView(view, 0);\nview.setTag(\"myview\" + position);\nreturn view;\n}\n@Override\npublic void destroyItem(View arg0, int arg1, Object arg2) {\n((androidx.viewpager.widget.ViewPager) arg0).removeView((View) arg2);\n}\n@Override\npublic boolean isViewFromObject(View arg0, Object arg1) {\nreturn arg0 \u003d\u003d ((View) arg1);\n}\n@Override\npublic Parcelable saveState() {\nreturn null;\n}\n"
  },
  {
    "نام": "View Pager 2",
    "کد": "}\n// Create a list of pages\nint[] pageId \u003d {\nR.layout.page1, R.layout.page3, R.layout.page5\n};\n\n// Define Adapter for ViewPager\nprivate class MyPagerAdapter extends androidx.viewpager.widget.PagerAdapter {\n\n// Get total number of pages\npublic int getCount() {\nreturn pageId.length;\n}\n\n// Get Title of pages\n@Override\npublic CharSequence getPageTitle(int position) {\nString[] pageTitle \u003d {\"Tab-1\", \"Tab-2\", \"Tab-3\"};\nreturn pageTitle[position];\n}\n\n// Get the Views to be displayed at each position\npublic Object instantiateItem(View collection, int position) {\n// Get View from their Ids\nView view \u003d getLayoutInflater().inflate(pageId[position], null);\n((androidx.viewpager.widget.ViewPager)collection).addView(view, 0);\n\nif (position \u003d\u003d 0) {\n// For the page at position 0 (page1.xml), define Switch and setOnCheckedChangeListener for it.\nfinal Switch tab1switch1 \u003d view.findViewById(R.id.switch2);\n\ntab1switch1.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n@Override\npublic void onCheckedChanged(CompoundButton _param1, boolean _param2){\nfinal boolean _isChecked \u003d _param2;\nif (_isChecked){\ntab1switch1.setText(\"Switch ON\");\n} else {\ntab1switch1.setText(\"Switch OFF\");\n}\n}\n});\n}\nelse if (position \u003d\u003d 1) {\n// For the page at position 1 (page3.xml), define TextView and setOnClickListener for it.\nfinal TextView tab2textview1 \u003d view.findViewById(R.id.textview1);\n\ntab2textview1.setOnClickListener(new View.OnClickListener() {\n@Override\npublic void onClick (View v){\nshowMessage(\"TextView 1 Clicked.\");\n}\n});\n}\nelse if (position \u003d\u003d 2) {\n// For the page at position 2 (page5.xml), define Button and setOnClickListener for it.\nfinal Button tab3button1 \u003d view.findViewById(R.id.button1);\n\ntab3button1.setOnClickListener(new View.OnClickListener() {\n@Override\npublic void onClick (View v){\nshowMessage(\"Button 1 Clicked.\");\n}\n});\n}\n// Return the View corresponding to position selected\nreturn view;\n}\n\n@Override\npublic void destroyItem(View arg0, int arg1, Object arg2) { ((androidx.viewpager.widget.ViewPager) arg0).removeView((View) arg2);\n}\n\n@Override\npublic boolean isViewFromObject(View arg0, Object arg1) {\nreturn arg0 \u003d\u003d ((View) arg1);\n}\n// Create a ViewPager, set adapter for it, and set it\u0027s current item to position 0 (page1.xml).\nandroidx.viewpager.widget.ViewPager viewPager1 \u003d new androidx.viewpager.widget.ViewPager(this);\nviewPager1.setAdapter(new MyPagerAdapter());\nviewPager1.setCurrentItem(0);\n// Define a new TabLayout, set it up with the ViewPager, and add it to the AppBarLayout which surrounds the ToolBar. The AppBarLayout thus will contain ToolBar and TabLayout.\ncom.google.android.material.tabs.TabLayout tabLayout \u003d new com.google.android.material.tabs.TabLayout(this);\ntabLayout.setupWithViewPager(viewPager1);\n((android.support.design.widget.AppBarLayout) _toolbar.getParent()).addView(tabLayout);\n// Add the ViewPager to linear1 of main.xml\nlinear1.addView(viewPager1);"
  },
  {
    "نام": "WebView - Swipe Refresh",
    "کد": "final androidx.swiperefreshlayout.widget.SwipeRefreshLayout sr \u003d new androidx.swiperefreshlayout.widget.SwipeRefreshLayout(this);\nsr.setLayoutParams(new LinearLayout.LayoutParams(android.widget.LinearLayout.LayoutParams.MATCH_PARENT, android.widget.LinearLayout.LayoutParams.MATCH_PARENT));\nlinear1.addView(sr);\nfinal WebView wb \u003d new WebView(this);\nwb.setLayoutParams(new LinearLayout.LayoutParams(android.widget.LinearLayout.LayoutParams.MATCH_PARENT, android.widget.LinearLayout.LayoutParams.MATCH_PARENT));\nwb.getSettings().setJavaScriptEnabled(true);\nsr.addView(wb);\nwb.setWebViewClient(new WebViewClient() { public void onPageFinished(WebView view, String url) { sr.setRefreshing(false);\n}}); \nwb.loadUrl(\"http://sketchware.io\");\nsr.setOnRefreshListener( new androidx.swiperefreshlayout.widget.SwipeRefreshLayout.OnRefreshListener() { @Override public void onRefresh() { wb.reload(); } } );\n\n// add firebase and widget anyting from firebase\n\n\n//Or you can use this mode edited\n\n\nfinal androidx.swiperefreshlayout.widget.SwipeRefreshLayout sr \u003d new androidx.swiperefreshlayout.widget.SwipeRefreshLayout(this);\nsr.setLayoutParams(new LinearLayout.LayoutParams(android.widget.LinearLayout.LayoutParams.MATCH_PARENT, android.widget.LinearLayout.LayoutParams.MATCH_PARENT));\nlinear1.addView(sr);\nfinal WebView wb \u003d (WebView)findViewById(R.id.webview1);\nwb.getSettings().setJavaScriptEnabled(true);\nlinear1.removeView(wb);\nlinear1.post(new Runnable() { @Override public void run() { sr.addView(wb); } });\nwb.setWebViewClient(new WebViewClient() { public void onPageFinished(WebView view, String url) { sr.setRefreshing(false);\n}});\nwb.loadUrl(\"http://www.google.com\");\nsr.setOnRefreshListener( new androidx.swiperefreshlayout.widget.SwipeRefreshLayout.OnRefreshListener() { @Override public void onRefresh() { wb.reload(); } } );"
  },
  {
    "نام": "BottomSheet Dialog",
    "کد": "//custom xml button 3 item\nfinal com.google.android.material.bottomsheet.BottomSheetDialog bs_base \u003d new com.google.android.material.bottomsheet.BottomSheetDialog(MainActivity.this);\n\nView layBase \u003d getLayoutInflater().inflate(R.layout.bottom_sheet, null);\n\nbs_base.setContentView(layBase);\n\nbs_base.show();\n\nButton pay_bs \u003d (Button)layBase.findViewById(R.id.button1);\n\nButton pay_bss \u003d (Button)layBase.findViewById(R.id.button2);\n\nButton pay_bsss \u003d (Button)layBase.findViewById(R.id.button3);\n\npay_bs.setOnClickListener(new View.OnClickListener() {\npublic void onClick(View v) {\nshowMessage(\"Button1\");\nbs_base.dismiss();\n}\n});\npay_bss.setOnClickListener(new View.OnClickListener() {\npublic void onClick(View v) {\nshowMessage(\"Button2\");\nbs_base.dismiss();\n}\n});\npay_bsss.setOnClickListener(new View.OnClickListener() {\npublic void onClick(View v) {\nshowMessage(\"Button3\");\nbs_base.dismiss();\n}\n});\n    "
  },
  {
    "نام": "Navigation Bottom menu",
    "کد": "com.google.android.material.bottomnavigation.BottomNavigationView btm\u003d new com.google.android.material.bottomnavigation.BottomNavigationView(MainActivity.this);\nbtm.setLayoutParams(new ViewGroup.LayoutParams( ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\n\nlinear1.addView(btm);\nlinear1.setElevation(16);\n\nMenu menu \u003d btm.getMenu();\n\nfinal int A \u003d 0;\nfinal int B \u003d 1;\nfinal int C \u003d 2;\n\nmenu.add(Menu.NONE, A, Menu.NONE, \"Code Java\").setIcon(R.drawable.ic_p);\n\nmenu.add(Menu.NONE, B, Menu.NONE, \"Hex Color\").setIcon(R.drawable.color_2);\n\nmenu.add(Menu.NONE, C, Menu.NONE, \"RGB Color\").setIcon(R.drawable.color_2);\nbtm.setOnNavigationItemSelectedListener(new  com.google.android.material.bottomnavigation.BottomNavigationView.OnNavigationItemSelectedListener() {  @Override public boolean onNavigationItemSelected(final MenuItem item) {\nswitch (item.getItemId()){ \ncase A: \n\nbreak;\ncase B:\n\n\nbreak; \ncase C:\n\n \nbreak; \n\n} return true; } });\n    "
  },
  {
    "نام": "Snackbar",
    "کد": "\ncom.google.android.material.snackbar.Snackbar sb \u003d com.google.android.material.snackbar.Snackbar.make(linear1, _text, com.google.android.material.snackbar.Snackbar.LENGTH_LONG).setDuration(8000);\n\nsb.setAction(_dismiss, new View.OnClickListener(){\n@Override\npublic void onClick(View v){\n\n//paste the code that you want to perform\n\n}\n});\n\nsb.show();"
  },
  {
    "نام": "Nested Scroll View",
    "کد": "linear.setNestedScrollingEnabled(true);\nscrollView.setFillViewport(true);"
  },
  {
    "نام": "SDK Target",
    "کد": "(Build.VERSION.SDK_INT \u003e\u003d 23)"
  },
  {
    "نام": "Status Bar Transparent",
    "کد": "androidx.cardview.widget.CardView cv \u003d new androidx.cardview.widget.CardView(MainActivity.this);\n\nLinearLayout.LayoutParams lp \u003d new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT);\n\nint mgs \u003d (int)getDip(10);\n\nlp.setMargins(mgs,mgs,mgs,mgs);\n\ncv.setLayoutParams(lp);\n\ncv.setCardBackgroundColor(Color.WHITE);\n\ncv.setRadius((int)getDip(7));\n\ncv.setCardElevation(8);\n\ncv.setMaxCardElevation(12);\n\ncv.setPreventCornerOverlap(true);\n\n((ViewGroup)linear3.getParent()).removeView(linear3);\n\nlinear1.removeAllViews();\n\nlinear1.addView(cv);\n\ncv.addView(linear3);"
  },
  {
    "نام": "card view",
    "کد": "androidx.cardview.widget.CardView cv \u003d new androidx.cardview.widget.CardView(MainActivity.this);\n\nLinearLayout.LayoutParams lp \u003d new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT);\n\nint mgs \u003d (int)getDip(10);\n\nlp.setMargins(mgs,mgs,mgs,mgs);\n\ncv.setLayoutParams(lp);\n\ncv.setCardBackgroundColor(Color.WHITE);\n\ncv.setRadius((int)getDip(7));\n\ncv.setCardElevation(8);\n\ncv.setMaxCardElevation(12);\n\ncv.setPreventCornerOverlap(true);\n\n((ViewGroup)linear3.getParent()).removeView(linear3);\n\nlinear1.removeAllViews();\n\nlinear1.addView(cv);\n\ncv.addView(linear3);"
  }
]
